---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'

import PageLayout from '@/layouts/BaseLayout.astro'
import BackToTop from '@/components/BackToTop.astro'
import Button from '@/components/Button.astro'
import Hero from '@/components/Hero.astro'
import TOC from '@/components/TOC.astro'
import { cn } from '@/utils'
import { integ } from '@/site-config'

interface Props {
  work: CollectionEntry<'work'>
  headings: MarkdownHeading[]
}

const {
  work: { data },
  headings
} = Astro.props

const { description, heroImage, publishDate, title, updatedDate, draft: isDraft } = data

const socialImage = heroImage
  ? typeof heroImage.src === 'string'
    ? heroImage.src
    : heroImage.src.src
  : 'social-card.png'
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString()
const primaryColor = data.heroImage?.color ?? 'hsl(var(--primary) / var(--tw-text-opacity))'
---

<PageLayout meta={{ articleDate, description, ogImage: socialImage, title }}>
  <Button title='Back' href='/work' style='back' />
  <main class='mt-6 items-start gap-x-10 md:flex'>
    {
      !!headings.length && (
        <TOC
          class='animate top-24 min-w-48 basis-60 max-md:hidden md:sticky md:order-2 lg:shrink-0'
          headings={headings}
        />
      )
    }

    <article class='min-w-0 grow' data-pagefind-body>
      <div id='content-header' class='animate'>
        <Hero data={data} />
      </div>
      <div
        id='content'
        class={cn('max-w-none animate mt-8 md:min-w-[45ch]', integ.typography.class)}
      >
        <slot />
      </div>
    </article>
  </main>

  <div class='mt-6 items-start gap-x-10 md:flex'>
    <div class='min-w-48 basis-60'>
      <slot name='bottom' />
    </div>
  </div>

  <BackToTop header='content-header' content='content' />
</PageLayout>
