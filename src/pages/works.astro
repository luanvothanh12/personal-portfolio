---
import { getCollection } from 'astro:content'

import PetProjectCard from '../components/PetProjectCard.astro'
import Button from '@/components/Button.astro'
import GitHubCalendar from '@/components/elements/GitHubCalendar'
import GitHubProjectCard from '@/components/GitHubProjectCard.astro'
import ProjectCard from '@/components/ProjectCard.astro'
import PageLayout from '@/layouts/BaseLayout.astro'
import { openSourceProject } from '@/site-config'

const projects = (await getCollection('work')).sort(
	(a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
)

const pets = (await getCollection('pet')).sort(
	(a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
)
---

<PageLayout meta={{ title: 'Works' }}>
	<div class='animate w-full'>
		<Button title='Back' href='/'>
			<svg
				xmlns='http://www.w3.org/2000/svg'
				width='14'
				height='14'
				viewBox='0 0 24 24'
				slot='icon-before'
			>
				<path
					fill='currentColor'
					d='m6.921 12.5l5.792 5.792L12 19l-7-7l7-7l.713.708L6.921 11.5H19v1z'
				>
				</path>
			</svg>
		</Button>

		<div class='mt-5 flex w-full flex-col gap-y-10'>
			<div>
				<h1 class='mb-1 text-2xl font-bold'>Works</h1>
				<p>Project I have done</p>
			</div>
			<div class='grid grid-cols-1 gap-x-3 gap-y-6 sm:grid-cols-2 md:grid-cols-3 md:gap-y-8'>
				{projects.map((project) => <ProjectCard project={project} />)}
			</div>

			<div>
				<h1 class='mb-1 text-2xl font-bold'>Works</h1>
				<p>Pest Project I have completed</p>
			</div>
			<div class='grid grid-cols-1 gap-x-3 gap-y-6 sm:grid-cols-2 md:grid-cols-3 md:gap-y-8'>
				{pets.map((project) => <PetProjectCard project={project} />)}
			</div>

			<div>
				<h1 class='mb-1 text-2xl font-bold'>Open-source</h1>
				<p>Project I have contributed</p>
			</div>
			<div class='grid grid-cols-1 gap-x-3 gap-y-6 sm:grid-cols-2 md:grid-cols-2 md:gap-y-8'>
				{
					openSourceProject && openSourceProject.length > 0 ? (
						openSourceProject.map((project) => (
							<GitHubProjectCard
								title={project.title}
								description={project.description}
								lang={project.lang}
								stars={project.stars}
								forks={project.forks}
								visibility={project.visibility}
								url={project.url}
							/>
						))
					) : (
						<div>There is no open source project found!</div>
					)
				}
			</div>
			<div class='flex justify-center'>
				<GitHubCalendar client:only='react' username={'s3822042'} />
			</div>
		</div>
	</div>
</PageLayout>
